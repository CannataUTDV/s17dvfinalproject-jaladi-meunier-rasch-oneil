<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0328.0755                               -->
<workbook source-build='10.2.1 (10200.17.0328.0755)' source-platform='mac' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' inline='true' name='federated.0au1cgc1exdbkh11b3wls1kihllk' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;vcjaladi/s-17-dv-final-project&quot;' name='webdata-direct.1xdvesb1f27h8b11p8pd30am4qr1'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;vcjaladi/s-17-dv-final-project&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OnZjamFsYWRpIiwiaXNzIjoiYWdlbnQ6dmNqYWxhZGk6OjM0ZmZmMmYwLWI3YTgtNDFhZi1hYzk0LTFjZjUyODJhY2M5OCIsImlhdCI6MTQ4NDY5NzI5Nywicm9sZSI6WyJ1c2VyX2FwaV93cml0ZSIsInVzZXJfYXBpX3JlYWQiXSwiZ2VuZXJhbC1wdXJwb3NlIjp0cnVlfQ.cSoZRtkV1DkfE35w4XNbe9IqwvHsZJFXBW7e0mJjoxEt3ebuTa5FmNJTanMDFgn6qjmgvy9D1GEOEsFRQ9350Q&quot;}' connectionName='&quot;vcjaladi/s-17-dv-final-project&quot;' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
          <named-connection caption='acs-2015-5-e-income-medians' name='textscan.1qkrep11ndy45y13ve3zw1bty1qw'>
            <connection class='textscan' directory='/Users/varunjaladi/Google Drive/College/CS329E Data Visualization/s17dvfinalproject-jaladi-meunier-rasch-oneil/03 Visualizations/DVFinal.twb Files/C:/Users/just2/OneDrive/School/5 Senior Year/Spring 2017/Data Vis/s17dvfinalproject-jaladi-meunier-rasch-oneil/03 Visualizations/DVFinal.twb Files/Users/varunjaladi/Google Drive/College/CS329E Data Visualization/s17dvfinalproject-jaladi-meunier-rasch-oneil/03 Visualizations/DVFinal.twb Files/C:/Users/Varun/Google Drive/College/CS329E Data Visualization/s17dvfinalproject-jaladi-meunier-rasch-oneil/01 Data' filename='acs-2015-5-e-income-medians.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[acs-2015-5-e-income-medians.csv].[AreaName]' />
              <expression op='[acs-2015-5-e-race-whitepopulation.csv].[AreaName]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[acs-2015-5-e-income-medians.csv].[AreaName]' />
                <expression op='[acs-2015-5-e-poverty-numinpov.csv].[AreaName]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[finalproject_ElectionsData].[v_0]' />
                  <expression op='[acs-2015-5-e-income-medians.csv].[AreaName]' />
                </expression>
              </clause>
              <relation connection='webdata-direct.1xdvesb1f27h8b11p8pd30am4qr1' name='finalproject_ElectionsData' table='[finalprojectElectionsData]' type='table' />
              <relation connection='textscan.1qkrep11ndy45y13ve3zw1bty1qw' name='acs-2015-5-e-income-medians.csv' table='[acs-2015-5-e-income-medians#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='AreaName' ordinal='0' />
                  <column datatype='integer' name='Median_Income' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1qkrep11ndy45y13ve3zw1bty1qw' name='acs-2015-5-e-poverty-numinpov.csv' table='[acs-2015-5-e-poverty-numinpov#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='AreaName' ordinal='0' />
                <column datatype='integer' name='Number_Below_PovertyLine' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1qkrep11ndy45y13ve3zw1bty1qw' name='acs-2015-5-e-race-whitepopulation.csv' table='[acs-2015-5-e-race-whitepopulation#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='AreaName' ordinal='0' />
              <column datatype='integer' name='White_Population' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[AreaName (acs-2015-5-e-poverty-numinpov.csv)]' value='[acs-2015-5-e-poverty-numinpov.csv].[AreaName]' />
          <map key='[AreaName (acs-2015-5-e-race-whitepopulation.csv)]' value='[acs-2015-5-e-race-whitepopulation.csv].[AreaName]' />
          <map key='[AreaName]' value='[acs-2015-5-e-income-medians.csv].[AreaName]' />
          <map key='[Median_Income]' value='[acs-2015-5-e-income-medians.csv].[Median_Income]' />
          <map key='[Number_Below_PovertyLine]' value='[acs-2015-5-e-poverty-numinpov.csv].[Number_Below_PovertyLine]' />
          <map key='[White_Population]' value='[acs-2015-5-e-race-whitepopulation.csv].[White_Population]' />
          <map key='[v_0]' value='[finalproject_ElectionsData].[v_0]' />
          <map key='[v_10]' value='[finalproject_ElectionsData].[v_10]' />
          <map key='[v_11]' value='[finalproject_ElectionsData].[v_11]' />
          <map key='[v_12]' value='[finalproject_ElectionsData].[v_12]' />
          <map key='[v_13]' value='[finalproject_ElectionsData].[v_13]' />
          <map key='[v_14]' value='[finalproject_ElectionsData].[v_14]' />
          <map key='[v_15]' value='[finalproject_ElectionsData].[v_15]' />
          <map key='[v_16]' value='[finalproject_ElectionsData].[v_16]' />
          <map key='[v_17]' value='[finalproject_ElectionsData].[v_17]' />
          <map key='[v_18]' value='[finalproject_ElectionsData].[v_18]' />
          <map key='[v_19]' value='[finalproject_ElectionsData].[v_19]' />
          <map key='[v_1]' value='[finalproject_ElectionsData].[v_1]' />
          <map key='[v_20]' value='[finalproject_ElectionsData].[v_20]' />
          <map key='[v_21]' value='[finalproject_ElectionsData].[v_21]' />
          <map key='[v_22]' value='[finalproject_ElectionsData].[v_22]' />
          <map key='[v_23]' value='[finalproject_ElectionsData].[v_23]' />
          <map key='[v_24]' value='[finalproject_ElectionsData].[v_24]' />
          <map key='[v_25]' value='[finalproject_ElectionsData].[v_25]' />
          <map key='[v_26]' value='[finalproject_ElectionsData].[v_26]' />
          <map key='[v_27]' value='[finalproject_ElectionsData].[v_27]' />
          <map key='[v_28]' value='[finalproject_ElectionsData].[v_28]' />
          <map key='[v_29]' value='[finalproject_ElectionsData].[v_29]' />
          <map key='[v_2]' value='[finalproject_ElectionsData].[v_2]' />
          <map key='[v_30]' value='[finalproject_ElectionsData].[v_30]' />
          <map key='[v_3]' value='[finalproject_ElectionsData].[v_3]' />
          <map key='[v_4]' value='[finalproject_ElectionsData].[v_4]' />
          <map key='[v_5]' value='[finalproject_ElectionsData].[v_5]' />
          <map key='[v_6]' value='[finalproject_ElectionsData].[v_6]' />
          <map key='[v_7]' value='[finalproject_ElectionsData].[v_7]' />
          <map key='[v_8]' value='[finalproject_ElectionsData].[v_8]' />
          <map key='[v_9]' value='[finalproject_ElectionsData].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Total.Population</remote-alias>
            <ordinal>2</ordinal>
            <caption>Total.Population</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>3</ordinal>
            <caption>votes</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>votes16_trumpd</remote-alias>
            <ordinal>4</ordinal>
            <caption>votes16_trumpd</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>votes16_clintonh</remote-alias>
            <ordinal>5</ordinal>
            <caption>votes16_clintonh</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>votes16_johnsong</remote-alias>
            <ordinal>6</ordinal>
            <caption>votes16_johnsong</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>votes16_steinj</remote-alias>
            <ordinal>7</ordinal>
            <caption>votes16_steinj</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>rep16_frac</remote-alias>
            <ordinal>8</ordinal>
            <caption>rep16_frac</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>dem16_frac</remote-alias>
            <ordinal>9</ordinal>
            <caption>dem16_frac</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>At.Least.Bachelor.s.Degree</remote-alias>
            <ordinal>10</ordinal>
            <caption>At.Least.Bachelor.s.Degree</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>At.Least.High.School.Diploma</remote-alias>
            <ordinal>11</ordinal>
            <caption>At.Least.High.School.Diploma</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Less.Than.High.School</remote-alias>
            <ordinal>12</ordinal>
            <caption>Less.Than.High.School</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Graduate.Degree</remote-alias>
            <ordinal>13</ordinal>
            <caption>Graduate.Degree</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>White.not.Latino.Population</remote-alias>
            <ordinal>14</ordinal>
            <caption>White.not.Latino.Population</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>African.American.Population</remote-alias>
            <ordinal>15</ordinal>
            <caption>African.American.Population</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Native.American.Population</remote-alias>
            <ordinal>16</ordinal>
            <caption>Native.American.Population</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Asian.American.Population</remote-alias>
            <ordinal>17</ordinal>
            <caption>Asian.American.Population</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Population.some.other.race.or.races</remote-alias>
            <ordinal>18</ordinal>
            <caption>Population.some.other.race.or.races</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_19</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_19]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Latino.Population</remote-alias>
            <ordinal>19</ordinal>
            <caption>Latino.Population</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_20</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_20]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Management.professional.and.related.occupations</remote-alias>
            <ordinal>20</ordinal>
            <caption>Management.professional.and.related.occupations</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_21</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_21]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Service.occupations</remote-alias>
            <ordinal>21</ordinal>
            <caption>Service.occupations</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_22</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_22]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Sales.and.office.occupations</remote-alias>
            <ordinal>22</ordinal>
            <caption>Sales.and.office.occupations</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_23</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_23]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Farming.fishing.and.forestry.occupations</remote-alias>
            <ordinal>23</ordinal>
            <caption>Farming.fishing.and.forestry.occupations</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_24</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_24]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Construction.extraction.maintenance.and.repair.occupations</remote-alias>
            <ordinal>24</ordinal>
            <caption>Construction.extraction.maintenance.and.repair.occupations</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_25</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_25]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Production.transportation.and.material.moving.occupations</remote-alias>
            <ordinal>25</ordinal>
            <caption>Production.transportation.and.material.moving.occupations</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_26</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_26]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Adult.obesity</remote-alias>
            <ordinal>26</ordinal>
            <caption>Adult.obesity</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_27</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_27]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Diabetes</remote-alias>
            <ordinal>27</ordinal>
            <caption>Diabetes</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_28</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_28]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Uninsured</remote-alias>
            <ordinal>28</ordinal>
            <caption>Uninsured</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_29</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_29]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>29</ordinal>
            <caption>Unemployment</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_30</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_30]</local-name>
            <parent-name>[finalproject_ElectionsData]</parent-name>
            <remote-alias>Diabetes(2)</remote-alias>
            <ordinal>30</ordinal>
            <caption>Diabetes(2)</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
              <attribute datatype='boolean' name='filterable_column'>false</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AreaName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AreaName]</local-name>
            <parent-name>[acs-2015-5-e-income-medians.csv]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median_Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median_Income]</local-name>
            <parent-name>[acs-2015-5-e-income-medians.csv]</parent-name>
            <remote-alias>Median_Income</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[acs-2015-5-e-income-medians.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AreaName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AreaName (acs-2015-5-e-poverty-numinpov.csv)]</local-name>
            <parent-name>[acs-2015-5-e-poverty-numinpov.csv]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number_Below_PovertyLine</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number_Below_PovertyLine]</local-name>
            <parent-name>[acs-2015-5-e-poverty-numinpov.csv]</parent-name>
            <remote-alias>Number_Below_PovertyLine</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[acs-2015-5-e-poverty-numinpov.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AreaName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AreaName (acs-2015-5-e-race-whitepopulation.csv)]</local-name>
            <parent-name>[acs-2015-5-e-race-whitepopulation.csv]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White_Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[White_Population]</local-name>
            <parent-name>[acs-2015-5-e-race-whitepopulation.csv]</parent-name>
            <remote-alias>White_Population</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[acs-2015-5-e-race-whitepopulation.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Area Name' datatype='string' name='[AreaName]' role='dimension' type='nominal' />
      <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
      </column>
      <column caption='Calculated Diff from Avg (Median Income)' datatype='real' name='[Calculation_208010009446490113]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Median_Income])-WINDOW_AVG(SUM([Median_Income]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='KPI - Poverty as Ratio' datatype='real' name='[Calculation_208010009446670338]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Number_Below_PovertyLine]/[v_2]' />
      </column>
      <column caption='KPI - Voter Turnout' datatype='real' name='[Calculation_208010009446727683]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[v_3]/[v_2]' />
      </column>
      <column aggregation='None' datatype='integer' name='[Less.Than.High.School (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='0' formula='[v_12]' peg='0' size='1.39' />
      </column>
      <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number Below PovertyLine' datatype='integer' name='[Number_Below_PovertyLine]' role='measure' type='quantitative' />
      <column caption='White Population' datatype='integer' name='[White_Population]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='At.Least.Bachelor.s.Degree' datatype='real' name='[v_10]' role='measure' type='quantitative' />
      <column caption='At.Least.High.School.Diploma' datatype='real' name='[v_11]' role='measure' type='quantitative' />
      <column caption='Less.Than.High.School' datatype='real' name='[v_12]' role='measure' type='quantitative' />
      <column caption='Graduate.Degree' datatype='real' name='[v_13]' role='measure' type='quantitative' />
      <column caption='White.not.Latino.Population' datatype='real' name='[v_14]' role='measure' type='quantitative' />
      <column caption='African.American.Population' datatype='real' name='[v_15]' role='measure' type='quantitative' />
      <column caption='Native.American.Population' datatype='real' name='[v_16]' role='measure' type='quantitative' />
      <column caption='Asian.American.Population' datatype='real' name='[v_17]' role='measure' type='quantitative' />
      <column caption='Population.some.other.race.or.races' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='Latino.Population' datatype='real' name='[v_19]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[v_1]' role='dimension' type='nominal' />
      <column caption='Management.professional.and.related.occupations' datatype='real' name='[v_20]' role='measure' type='quantitative' />
      <column caption='Service.occupations' datatype='real' name='[v_21]' role='measure' type='quantitative' />
      <column caption='Sales.and.office.occupations' datatype='real' name='[v_22]' role='measure' type='quantitative' />
      <column caption='Farming.fishing.and.forestry.occupations' datatype='real' name='[v_23]' role='measure' type='quantitative' />
      <column caption='Construction.extraction.maintenance.and.repair.occupations' datatype='real' name='[v_24]' role='measure' type='quantitative' />
      <column caption='Production.transportation.and.material.moving.occupations' datatype='real' name='[v_25]' role='measure' type='quantitative' />
      <column caption='Adult.obesity' datatype='real' name='[v_26]' role='measure' type='quantitative' />
      <column caption='Diabetes' datatype='real' name='[v_27]' role='measure' type='quantitative' />
      <column caption='Uninsured' datatype='real' name='[v_28]' role='measure' type='quantitative' />
      <column caption='Unemployment' datatype='real' name='[v_29]' role='measure' type='quantitative' />
      <column caption='Total.Population' datatype='real' name='[v_2]' role='measure' type='quantitative' />
      <column caption='Diabetes(2)' datatype='real' name='[v_30]' role='measure' type='quantitative' />
      <column caption='votes' datatype='integer' name='[v_3]' role='measure' type='quantitative' />
      <column caption='votes16_trumpd' datatype='integer' name='[v_4]' role='measure' type='quantitative' />
      <column caption='votes16_clintonh' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='votes16_johnsong' datatype='integer' name='[v_6]' role='measure' type='quantitative' />
      <column caption='votes16_steinj' datatype='integer' name='[v_7]' role='measure' type='quantitative' />
      <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
      <column caption='dem16_frac' datatype='real' name='[v_9]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
      <group caption='Action (Victory Margin)' hidden='true' name='[Action (Victory Margin)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_208010009446297600]' />
        </groupfilter>
      </group>
      <group caption='Action (Victory Margin,State)' hidden='true' name='[Action (Victory Margin,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_208010009446297600]' />
          <groupfilter function='level-members' level='[v_0]' />
        </groupfilter>
      </group>
      <group name='[Swing States]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_0]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[v_0]' member='&quot;Wisconsin&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/varunjaladi/Google Drive/College/CS329E Data Visualization/s17dvfinalproject-jaladi-meunier-rasch-oneil/03 Visualizations/finalproject_ElectionsData+ (Multiple Connections).tde' schema='Extract' tablename='Extract' update-time='04/30/2017 11:18:07 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[AreaName (acs-2015-5-e-poverty-numinpov.csv)]' value='[Extract].[AreaName]' />
            <map key='[AreaName (acs-2015-5-e-race-whitepopulation.csv)]' value='[Extract].[AreaName1]' />
            <map key='[AreaName]' value='[Extract].[AreaName2]' />
            <map key='[Median_Income]' value='[Extract].[Median_Income]' />
            <map key='[Number_Below_PovertyLine]' value='[Extract].[Number_Below_PovertyLine]' />
            <map key='[White_Population]' value='[Extract].[White_Population]' />
            <map key='[v_0]' value='[Extract].[v_0]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_11]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_13]' value='[Extract].[v_13]' />
            <map key='[v_14]' value='[Extract].[v_14]' />
            <map key='[v_15]' value='[Extract].[v_15]' />
            <map key='[v_16]' value='[Extract].[v_16]' />
            <map key='[v_17]' value='[Extract].[v_17]' />
            <map key='[v_18]' value='[Extract].[v_18]' />
            <map key='[v_19]' value='[Extract].[v_19]' />
            <map key='[v_1]' value='[Extract].[v_1]' />
            <map key='[v_20]' value='[Extract].[v_20]' />
            <map key='[v_21]' value='[Extract].[v_21]' />
            <map key='[v_22]' value='[Extract].[v_22]' />
            <map key='[v_23]' value='[Extract].[v_23]' />
            <map key='[v_24]' value='[Extract].[v_24]' />
            <map key='[v_25]' value='[Extract].[v_25]' />
            <map key='[v_26]' value='[Extract].[v_26]' />
            <map key='[v_27]' value='[Extract].[v_27]' />
            <map key='[v_28]' value='[Extract].[v_28]' />
            <map key='[v_29]' value='[Extract].[v_29]' />
            <map key='[v_2]' value='[Extract].[v_2]' />
            <map key='[v_30]' value='[Extract].[v_30]' />
            <map key='[v_3]' value='[Extract].[v_3]' />
            <map key='[v_4]' value='[Extract].[v_4]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='50' timestamp-start='2017-04-30 23:18:07.756' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AreaName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AreaName (acs-2015-5-e-poverty-numinpov.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AreaName</remote-alias>
              <ordinal>0</ordinal>
              <family>acs-2015-5-e-poverty-numinpov.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AreaName1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AreaName (acs-2015-5-e-race-whitepopulation.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AreaName1</remote-alias>
              <ordinal>1</ordinal>
              <family>acs-2015-5-e-race-whitepopulation.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AreaName2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AreaName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AreaName2</remote-alias>
              <ordinal>2</ordinal>
              <family>acs-2015-5-e-income-medians.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Income</remote-alias>
              <ordinal>3</ordinal>
              <family>acs-2015-5-e-income-medians.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3353430.0</statistic>
                <statistic aggregation='Avg' datatype='real'>67068.600000000006</statistic>
                <statistic aggregation='Min' datatype='integer'>49274</statistic>
                <statistic aggregation='Max' datatype='integer'>90089</statistic>
                <statistic aggregation='Stdev' datatype='real'>10504.875219999289</statistic>
                <statistic aggregation='StdevP' datatype='real'>10399.295905012032</statistic>
                <statistic aggregation='Var' datatype='real'>110352403.3877551</statistic>
                <statistic aggregation='VarP' datatype='real'>108145355.31999999</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>230317123064.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number_Below_PovertyLine</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Number_Below_PovertyLine]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number_Below_PovertyLine</remote-alias>
              <ordinal>4</ordinal>
              <family>acs-2015-5-e-poverty-numinpov.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>47676086.0</statistic>
                <statistic aggregation='Avg' datatype='real'>953521.71999999997</statistic>
                <statistic aggregation='Min' datatype='integer'>64995</statistic>
                <statistic aggregation='Max' datatype='integer'>6135142</statistic>
                <statistic aggregation='Stdev' datatype='real'>1143254.7592158073</statistic>
                <statistic aggregation='StdevP' datatype='real'>1131764.4700114073</statistic>
                <statistic aggregation='Var' datatype='real'>1307031444469.5935</statistic>
                <statistic aggregation='VarP' datatype='real'>1280890815580.2017</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>109504724304598.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>White_Population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[White_Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>White_Population</remote-alias>
              <ordinal>5</ordinal>
              <family>acs-2015-5-e-race-whitepopulation.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>232458805.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4649176.0999999996</statistic>
                <statistic aggregation='Min' datatype='integer'>260325</statistic>
                <statistic aggregation='Max' datatype='integer'>23747013</statistic>
                <statistic aggregation='Stdev' datatype='real'>4797190.821164621</statistic>
                <statistic aggregation='StdevP' datatype='real'>4748976.6244079126</statistic>
                <statistic aggregation='Var' datatype='real'>23013039774666.094</statistic>
                <statistic aggregation='VarP' datatype='real'>22552778979172.77</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2208380869399199.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>6</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>7</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1066.1540748600003</statistic>
                <statistic aggregation='Avg' datatype='real'>21.323081497200004</statistic>
                <statistic aggregation='Min' datatype='real'>13.794545449999999</statistic>
                <statistic aggregation='Max' datatype='real'>36.40714286</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.6583404907181043</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.6014713037488644</statistic>
                <statistic aggregation='Var' datatype='real'>32.0168171089</statistic>
                <statistic aggregation='VarP' datatype='real'>31.376480766722</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>24302.514265147758</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>8</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4185.2066598899992</statistic>
                <statistic aggregation='Avg' datatype='real'>83.70413319779999</statistic>
                <statistic aggregation='Min' datatype='real'>43.25</statistic>
                <statistic aggregation='Max' datatype='real'>91.147826089999995</statistic>
                <statistic aggregation='Stdev' datatype='real'>7.3745232520266946</statistic>
                <statistic aggregation='StdevP' datatype='real'>7.3004055593363253</statistic>
                <statistic aggregation='Var' datatype='real'>54.383593194682376</statistic>
                <statistic aggregation='VarP' datatype='real'>53.29592133078873</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>352983.8917862915</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>9</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>754.20278893299985</statistic>
                <statistic aggregation='Avg' datatype='real'>15.084055778659996</statistic>
                <statistic aggregation='Min' datatype='real'>6.75</statistic>
                <statistic aggregation='Max' datatype='real'>24.263333329999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.6360026769909535</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.5894085026990066</statistic>
                <statistic aggregation='Var' datatype='real'>21.492520821067288</statistic>
                <statistic aggregation='VarP' datatype='real'>21.062670404645939</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>12429.5704569186</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>10</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>380.39674042000001</statistic>
                <statistic aggregation='Avg' datatype='real'>7.6079348084000005</statistic>
                <statistic aggregation='Min' datatype='real'>4.2981132080000002</statistic>
                <statistic aggregation='Max' datatype='real'>15.300000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.836290258665882</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.8077841054423889</statistic>
                <statistic aggregation='Var' datatype='real'>8.0445424314029754</statistic>
                <statistic aggregation='VarP' datatype='real'>7.8836515827749158</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>3288.2161815819636</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>11</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3884.642801519999</statistic>
                <statistic aggregation='Avg' datatype='real'>77.69285603039998</statistic>
                <statistic aggregation='Min' datatype='real'>28.68</statistic>
                <statistic aggregation='Max' datatype='real'>95.478571430000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>16.121408768338046</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.959380447320941</statistic>
                <statistic aggregation='Var' datatype='real'>259.89982067584685</statistic>
                <statistic aggregation='VarP' datatype='real'>254.70182426232995</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>314544.08512113942</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>12</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>421.713023932</statistic>
                <statistic aggregation='Avg' datatype='real'>8.4342604786400006</statistic>
                <statistic aggregation='Min' datatype='real'>0.25089285700000002</statistic>
                <statistic aggregation='Max' datatype='real'>52.299999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>12.056865139914882</statistic>
                <statistic aggregation='StdevP' datatype='real'>11.935687540399705</statistic>
                <statistic aggregation='Var' datatype='real'>145.36799700209468</statistic>
                <statistic aggregation='VarP' datatype='real'>142.46063706205277</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>10679.86934418007</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>13</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>92.10773397499996</statistic>
                <statistic aggregation='Avg' datatype='real'>1.8421546794999992</statistic>
                <statistic aggregation='Min' datatype='real'>0.146268657</statistic>
                <statistic aggregation='Max' datatype='real'>13.47348485</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.0961251298203112</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.0650075045772307</statistic>
                <statistic aggregation='Var' datatype='real'>9.5859908195048398</statistic>
                <statistic aggregation='VarP' datatype='real'>9.3942710031147438</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>639.39024331592441</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>14</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>92.882314429000033</statistic>
                <statistic aggregation='Avg' datatype='real'>1.8576462885800007</statistic>
                <statistic aggregation='Min' datatype='real'>0.35446428600000002</statistic>
                <statistic aggregation='Max' datatype='real'>27.370000000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>3.8897045172602733</statistic>
                <statistic aggregation='StdevP' datatype='real'>3.8506110173533599</statistic>
                <statistic aggregation='Var' datatype='real'>15.129801231594977</statistic>
                <statistic aggregation='VarP' datatype='real'>14.827205206963077</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>913.90274702190641</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>15</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>116.74111881400003</statistic>
                <statistic aggregation='Avg' datatype='real'>2.3348223762800004</statistic>
                <statistic aggregation='Min' datatype='real'>0.77134146299999995</statistic>
                <statistic aggregation='Max' datatype='real'>34.659999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.7239959468190564</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.6765173956109276</statistic>
                <statistic aggregation='Var' datatype='real'>22.316137705562873</statistic>
                <statistic aggregation='VarP' datatype='real'>21.869814951451616</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1366.0605240114703</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_19</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_19</remote-alias>
              <ordinal>16</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>391.78970838600003</statistic>
                <statistic aggregation='Avg' datatype='real'>7.8357941677200005</statistic>
                <statistic aggregation='Min' datatype='real'>0.91636363600000004</statistic>
                <statistic aggregation='Max' datatype='real'>45.25</statistic>
                <statistic aggregation='Stdev' datatype='real'>8.8011315479265093</statistic>
                <statistic aggregation='StdevP' datatype='real'>8.7126757195151665</statistic>
                <statistic aggregation='Var' datatype='real'>77.459916523907282</statistic>
                <statistic aggregation='VarP' datatype='real'>75.910718193429133</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6865.5194216151949</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>17</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Midwest&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;West&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;South&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_20</remote-alias>
              <ordinal>18</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1583.6848328899996</statistic>
                <statistic aggregation='Avg' datatype='real'>31.673696657799994</statistic>
                <statistic aggregation='Min' datatype='real'>25.989552239999998</statistic>
                <statistic aggregation='Max' datatype='real'>56.75</statistic>
                <statistic aggregation='Stdev' datatype='real'>5.3058966773673708</statistic>
                <statistic aggregation='StdevP' datatype='real'>5.252569729178294</statistic>
                <statistic aggregation='Var' datatype='real'>28.152539550898101</statistic>
                <statistic aggregation='VarP' datatype='real'>27.58948875988014</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>51540.627436510527</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_21]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>19</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>882.70489003000012</statistic>
                <statistic aggregation='Avg' datatype='real'>17.654097800600002</statistic>
                <statistic aggregation='Min' datatype='real'>15.356451610000001</statistic>
                <statistic aggregation='Max' datatype='real'>22.82</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.4021740203251365</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.3880814614457111</statistic>
                <statistic aggregation='Var' datatype='real'>1.9660919832747563</statistic>
                <statistic aggregation='VarP' datatype='real'>1.9267701436092612</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15679.696964837956</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>20</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1154.2271535499997</statistic>
                <statistic aggregation='Avg' datatype='real'>23.084543070999995</statistic>
                <statistic aggregation='Min' datatype='real'>19.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>26.292857139999999</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.5448723015131647</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.5293455526541184</statistic>
                <statistic aggregation='Var' datatype='real'>2.3866304279825821</statistic>
                <statistic aggregation='VarP' datatype='real'>2.3388978194229306</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>26761.751330813837</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_23</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_23]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_23</remote-alias>
              <ordinal>21</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>95.257813779999992</statistic>
                <statistic aggregation='Avg' datatype='real'>1.9051562755999998</statistic>
                <statistic aggregation='Min' datatype='real'>0.10000000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>5.3977272730000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.2987879072597506</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.2857344311650363</statistic>
                <statistic aggregation='Var' datatype='real'>1.6868500280441627</statistic>
                <statistic aggregation='VarP' datatype='real'>1.6531130274832795</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>264.1366730970671</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_24</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_24]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_24</remote-alias>
              <ordinal>22</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>558.5568059970002</statistic>
                <statistic aggregation='Avg' datatype='real'>11.171136119940003</statistic>
                <statistic aggregation='Min' datatype='real'>3.2999999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>16.70588235</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.2205024014639076</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.1981852280025995</statistic>
                <statistic aggregation='Var' datatype='real'>4.9306309149069802</statistic>
                <statistic aggregation='VarP' datatype='real'>4.8320182966088412</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>6481.3150253418517</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_25</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_25]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_25</remote-alias>
              <ordinal>23</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>725.63421304400003</statistic>
                <statistic aggregation='Avg' datatype='real'>14.51268426088</statistic>
                <statistic aggregation='Min' datatype='real'>4.6500000000000004</statistic>
                <statistic aggregation='Max' datatype='real'>22.800543480000002</statistic>
                <statistic aggregation='Stdev' datatype='real'>4.2388139996979852</statistic>
                <statistic aggregation='StdevP' datatype='real'>4.1962117727248849</statistic>
                <statistic aggregation='Var' datatype='real'>17.96754412403563</statistic>
                <statistic aggregation='VarP' datatype='real'>17.608193241554918</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>11411.30988487745</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_26</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_26]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_26</remote-alias>
              <ordinal>24</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14.599961813</statistic>
                <statistic aggregation='Avg' datatype='real'>0.29199923626000002</statistic>
                <statistic aggregation='Min' datatype='real'>0.206828125</statistic>
                <statistic aggregation='Max' datatype='real'>0.366987805</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.037684902697625741</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.037306150344184927</statistic>
                <statistic aggregation='Var' datatype='real'>0.0014201518913295197</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0013917488535029293</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.3327651414963118</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_27</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_27]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_27</remote-alias>
              <ordinal>25</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0860739009999998</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10172147801999999</statistic>
                <statistic aggregation='Min' datatype='real'>0.063062499999999994</statistic>
                <statistic aggregation='Max' datatype='real'>0.140820896</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.018026346415919249</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.017845172507000042</statistic>
                <statistic aggregation='Var' datatype='real'>0.00032494916510672473</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00031845018180459022</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.53328546361889662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_28</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_28]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_28</remote-alias>
              <ordinal>26</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>8.2100620739999997</statistic>
                <statistic aggregation='Avg' datatype='real'>0.16420124147999998</statistic>
                <statistic aggregation='Min' datatype='real'>0.053499999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>0.26579921299999998</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.04902469273703737</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.048531969751924413</statistic>
                <statistic aggregation='Var' datatype='real'>0.0024034204979609245</statistic>
                <statistic aggregation='VarP' datatype='real'>0.002355352088001706</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1.4658699895787488</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_29</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_29]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_29</remote-alias>
              <ordinal>27</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3.900370224</statistic>
                <statistic aggregation='Avg' datatype='real'>0.07800740448</statistic>
                <statistic aggregation='Min' datatype='real'>0.035731183</statistic>
                <statistic aggregation='Max' datatype='real'>0.122517241</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.019696987682913728</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.01949902298335068</statistic>
                <statistic aggregation='Var' datatype='real'>0.00038797132378085513</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00038021189730523802</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.32326835255057806</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>28</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>304406849.0</statistic>
                <statistic aggregation='Avg' datatype='real'>6088136.9800000004</statistic>
                <statistic aggregation='Min' datatype='real'>543787.5</statistic>
                <statistic aggregation='Max' datatype='real'>36781241.5</statistic>
                <statistic aggregation='Stdev' datatype='real'>6761924.5283176713</statistic>
                <statistic aggregation='StdevP' datatype='real'>6693963.7629831014</statistic>
                <statistic aggregation='Var' datatype='real'>45723623326664.164</statistic>
                <statistic aggregation='VarP' datatype='real'>44809150860130.883</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4093728137368720.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_30</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_30]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_30</remote-alias>
              <ordinal>29</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>5.0860739009999998</statistic>
                <statistic aggregation='Avg' datatype='real'>0.10172147801999999</statistic>
                <statistic aggregation='Min' datatype='real'>0.063062499999999994</statistic>
                <statistic aggregation='Max' datatype='real'>0.140820896</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.018026346415919249</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.017845172507000042</statistic>
                <statistic aggregation='Var' datatype='real'>0.00032494916510672473</statistic>
                <statistic aggregation='VarP' datatype='real'>0.00031845018180459022</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>0.53328546361889662</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>30</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>129931473.0</statistic>
                <statistic aggregation='Avg' datatype='real'>2598629.46</statistic>
                <statistic aggregation='Min' datatype='integer'>248742</statistic>
                <statistic aggregation='Max' datatype='integer'>11954317</statistic>
                <statistic aggregation='Stdev' datatype='real'>2540673.7574887909</statistic>
                <statistic aggregation='StdevP' datatype='real'>2515138.6997842421</statistic>
                <statistic aggregation='Var' datatype='real'>6455023141992.2119</statistic>
                <statistic aggregation='VarP' datatype='real'>6325922679152.3682</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>653939887476613.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>31</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>61064602.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1221292.04</statistic>
                <statistic aggregation='Min' datatype='integer'>11553</statistic>
                <statistic aggregation='Max' datatype='integer'>4681590</statistic>
                <statistic aggregation='Stdev' datatype='real'>1104674.7815522673</statistic>
                <statistic aggregation='StdevP' datatype='real'>1093572.2406579268</statistic>
                <statistic aggregation='Var' datatype='real'>1220306372997.5493</statistic>
                <statistic aggregation='VarP' datatype='real'>1195900245537.5984</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>134372724625248.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>32</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>62426228.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1248524.5600000001</statistic>
                <statistic aggregation='Min' datatype='integer'>55949</statistic>
                <statistic aggregation='Max' datatype='integer'>7362490</statistic>
                <statistic aggregation='Stdev' datatype='real'>1398410.5587898372</statistic>
                <statistic aggregation='StdevP' datatype='real'>1384355.8246044281</statistic>
                <statistic aggregation='Var' datatype='real'>1955552090934.9045</statistic>
                <statistic aggregation='VarP' datatype='real'>1916441049116.2063</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>173762731301970.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>33</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4260203.0</statistic>
                <statistic aggregation='Avg' datatype='real'>85204.059999999998</statistic>
                <statistic aggregation='Min' datatype='integer'>4501</statistic>
                <statistic aggregation='Max' datatype='integer'>402406</statistic>
                <statistic aggregation='Stdev' datatype='real'>76945.677902888754</statistic>
                <statistic aggregation='StdevP' datatype='real'>76172.334879379938</statistic>
                <statistic aggregation='Var' datatype='real'>5920637347.9351025</statistic>
                <statistic aggregation='VarP' datatype='real'>5802224600.9764004</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>653097822073.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>34</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1311595.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29808.977272727272</statistic>
                <statistic aggregation='Min' datatype='integer'>2512</statistic>
                <statistic aggregation='Max' datatype='integer'>220312</statistic>
                <statistic aggregation='Stdev' datatype='real'>36961.786251565929</statistic>
                <statistic aggregation='StdevP' datatype='real'>36539.351963756853</statistic>
                <statistic aggregation='Var' datatype='real'>1366173642.9064481</statistic>
                <statistic aggregation='VarP' datatype='real'>1335124241.9313016</statistic>
                <statistic aggregation='Count' datatype='integer'>44</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>97842772191.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>35</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>30.518853364999995</statistic>
                <statistic aggregation='Avg' datatype='real'>0.61037706729999985</statistic>
                <statistic aggregation='Min' datatype='real'>0.042509272000000001</statistic>
                <statistic aggregation='Max' datatype='real'>0.81079162299999996</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.147915366894734</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14642874256214761</statistic>
                <statistic aggregation='Var' datatype='real'>0.021878955763603773</statistic>
                <statistic aggregation='VarP' datatype='real'>0.021441376648331699</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19.700077046704013</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>36</ordinal>
              <family>finalproject_ElectionsData</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>19.481146634999998</statistic>
                <statistic aggregation='Avg' datatype='real'>0.38962293269999998</statistic>
                <statistic aggregation='Min' datatype='real'>0.18920837700000001</statistic>
                <statistic aggregation='Max' datatype='real'>0.95749072800000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.14791536689473331</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14642874256214691</statistic>
                <statistic aggregation='Var' datatype='real'>0.021878955763603564</statistic>
                <statistic aggregation='VarP' datatype='real'>0.021441376648331494</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8.6623703167040098</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.425806' group-percentage='0.0983871' measure-ordering='alphabetic' measure-percentage='0.475806' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_208010009446297600:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Hillary Landslide Win&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Trump Landslide Win&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Hillary Narrow Win&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hillary Win&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Trump Win&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Trump Narrow Win&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0au1cgc1exdbkh11b3wls1kihllk' type='datasource'>
        <exclude-sheet name='Boxplot' />
        <exclude-sheet name='Crosstab' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Barchart2' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0au1cgc1exdbkh11b3wls1kihllk' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Scatterplot' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0au1cgc1exdbkh11b3wls1kihllk' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map2' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Map2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter4' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.0au1cgc1exdbkh11b3wls1kihllk' type='datasource'>
        <exclude-sheet name='Barchart' />
        <exclude-sheet name='Barchart2' />
        <exclude-sheet name='Boxplot' />
        <exclude-sheet name='Crosstab' />
        <exclude-sheet name='Histogram' />
        <exclude-sheet name='Map' />
        <exclude-sheet name='Map2' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Barchart2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Barchart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Income in Swing States by Victory Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column caption='Calculated Diff from Avg (Median Income)' datatype='real' name='[Calculation_208010009446490113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Median_Income])-WINDOW_AVG(SUM([Median_Income]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
            <column-instance column='[Median_Income]' derivation='Sum' name='[sum:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_208010009446490113]' derivation='User' name='[usr:Calculation_208010009446490113:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Swing States]' />
          <slices>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Swing States]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' />
              <text column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[usr:Calculation_208010009446490113:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Median_Income:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Median_Income:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Swing States]</rows>
        <cols>([federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk] * [federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Median_Income:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Barchart2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Income in All States by Victory Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column caption='Calculated Diff from Avg (Median Income)' datatype='real' name='[Calculation_208010009446490113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Median_Income])-WINDOW_AVG(SUM([Median_Income]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Median_Income]' derivation='Sum' name='[sum:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_208010009446490113]' derivation='User' name='[usr:Calculation_208010009446490113:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin)]'>
            <groupfilter function='level-members' level='[Calculation_208010009446297600]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_208010009446297600]' />
              <groupfilter function='level-members' level='[v_0]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin,State)]</column>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' />
              <text column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[usr:Calculation_208010009446490113:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Median_Income:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Median_Income:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]</rows>
        <cols>([federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk] * [federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Median_Income:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Boxplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Unemployment by Region and Victory Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[v_0]' derivation='Attribute' name='[attr:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_29]' derivation='Sum' name='[sum:v_29:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column caption='Unemployment' datatype='real' name='[v_29]' role='measure' type='quantitative' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]' />
              <tooltip column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[attr:v_0:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_29:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_29:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_29:qk]</rows>
        <cols>([federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk] / [federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Incomes by Victory Margin and Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
            <column-instance column='[Median_Income]' derivation='Avg' name='[avg:Median_Income:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' value='116' />
            <format attr='height' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]' value='47' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Median_Income:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Median_Income:qk]' />
              <text column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Median_Income:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]</rows>
        <cols>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Histogram'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Education Level Below High School</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='KPI - Voter Turnout' datatype='real' name='[Calculation_208010009446727683]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[v_3]/[v_2]' />
            </column>
            <column aggregation='None' datatype='integer' name='[Less.Than.High.School (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='0' formula='[v_12]' peg='0' size='1.39' />
            </column>
            <column-instance column='[Calculation_208010009446727683]' derivation='Avg' name='[avg:Calculation_208010009446727683:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_12]' derivation='Count' name='[cnt:v_12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Less.Than.High.School (bin)]' derivation='None' name='[none:Less.Than.High.School (bin):qk]' pivot='key' type='quantitative' />
            <column caption='Less.Than.High.School' datatype='real' name='[v_12]' role='measure' type='quantitative' />
            <column caption='Total.Population' datatype='real' name='[v_2]' role='measure' type='quantitative' />
            <column caption='votes' datatype='integer' name='[v_3]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Less.Than.High.School (bin):qk]' scope='cols' value='% With Education Level Less Than High School' />
            <format attr='subtitle' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Less.Than.High.School (bin):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Less.Than.High.School (bin):qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Calculation_208010009446727683:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[cnt:v_12:qk]</rows>
        <cols>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Less.Than.High.School (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Less.Than.High.School (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of Bachelor Degree Attainment by Region and Victory Margin - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1]' derivation='None' name='[none:v_1:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='At.Least.Bachelor.s.Degree' datatype='real' name='[v_10]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[v_1]' role='dimension' type='nominal' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='21.32' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' />
              <text column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' />
              <lod column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]' />
              <geometry column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Latitude (generated)]</rows>
        <cols>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Map2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of Bachelor Degree Attainment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_208010009446297600]' derivation='None' name='[none:Calculation_208010009446297600:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='Sum' name='[sum:v_10:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='At.Least.Bachelor.s.Degree' datatype='real' name='[v_10]' role='measure' type='quantitative' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin)]'>
            <groupfilter function='level-members' level='[Calculation_208010009446297600]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_208010009446297600]' />
              <groupfilter function='level-members' level='[v_0]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin,State)]</column>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Longitude (generated)]' field-type='quantitative' max='-7454397.722352203' min='-14147617.593835913' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Latitude (generated)]' field-type='quantitative' max='7995031.8421230176' min='2337863.2038173759' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='21.32' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' max='36.40714286' min='13.794545449999999' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' />
              <text column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' />
              <lod column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]' />
              <geometry column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Latitude (generated)]</rows>
        <cols>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Scatterplot'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Democratic Voters vs. Percentage Uninsured</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='finalproject_ElectionsData+ (Multiple Connections)' name='federated.0au1cgc1exdbkh11b3wls1kihllk' />
          </datasources>
          <datasource-dependencies datasource='federated.0au1cgc1exdbkh11b3wls1kihllk'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_208010009446297600]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_8] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .625 THEN &quot;Trump Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#13;&#10;ELSEIF [v_8] &gt; .25 THEN &quot;Hillary Win&quot;&#13;&#10;ELSE &quot;Hillary Landslide Win&quot;&#13;&#10;END' />
            </column>
            <column caption='KPI - Poverty as Ratio' datatype='real' name='[Calculation_208010009446670338]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Number_Below_PovertyLine]/[v_2]' />
            </column>
            <column caption='Number Below PovertyLine' datatype='integer' name='[Number_Below_PovertyLine]' role='measure' type='quantitative' />
            <column-instance column='[v_0]' derivation='Attribute' name='[attr:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_208010009446670338]' derivation='Sum' name='[sum:Calculation_208010009446670338:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_28]' derivation='Sum' name='[sum:v_28:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_9]' derivation='Sum' name='[sum:v_9:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Uninsured' datatype='real' name='[v_28]' role='measure' type='quantitative' />
            <column caption='Total.Population' datatype='real' name='[v_2]' role='measure' type='quantitative' />
            <column caption='rep16_frac' datatype='real' name='[v_8]' role='measure' type='quantitative' />
            <column caption='dem16_frac' datatype='real' name='[v_9]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin)]'>
            <groupfilter function='level-members' level='[Calculation_208010009446297600]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin,State)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_208010009446297600]' />
              <groupfilter function='level-members' level='[v_0]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin,State)]</column>
            <column>[federated.0au1cgc1exdbkh11b3wls1kihllk].[Action (Victory Margin)]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_28:qk]' field-type='quantitative' max='0.28241213771832674' min='0.0' range-type='fixed' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_28:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_28:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_9:qk]' field-type='quantitative' max='1.0175095874076183' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_9:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_9:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' max='0.22125508337921979' min='0.086508207602980211' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='size' field='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' field-type='quantitative' max='0.22125508337921979' max-size='1' min='0.086508207602980211' min-size='0' type='rangesize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' />
              <size column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' />
              <tooltip column='[federated.0au1cgc1exdbkh11b3wls1kihllk].[attr:v_0:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='log' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_9:qk]</rows>
        <cols>[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_28:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='Barchart2' w='84000' x='0' y='0' />
              <zone h='50000' id='7' name='Scatterplot' w='42000' x='42000' y='50000' />
              <zone h='50000' id='10' name='Map2' w='42000' x='0' y='50000' />
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='18750' id='6' name='Barchart2' pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' type='color' w='16000' x='84000' y='0' />
              <zone h='8125' id='8' name='Scatterplot' pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' type='color' w='16000' x='84000' y='18750' />
              <zone h='23250' id='9' name='Scatterplot' pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' type='size' w='16000' x='84000' y='26875' />
              <zone h='8125' id='11' name='Map2' pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' type='color' w='16000' x='84000' y='50125' />
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Barchart'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[io:Swing States:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Midwest&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Scatterplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:Calculation_208010009446670338:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Barchart2'>
          <highlight>
            <color-one-way>
              <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Map2'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='8' />
        </viewpoint>
        <viewpoint name='Scatterplot'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' maximized='true' name='Histogram'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Calculation_208010009446727683:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Calculation_208010009446727683:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Median_Income:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[avg:Median_Income:qk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Barchart2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Map2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0au1cgc1exdbkh11b3wls1kihllk].[sum:v_10:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:Calculation_208010009446297600:nk]</field>
            <field>[federated.0au1cgc1exdbkh11b3wls1kihllk].[none:v_0:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Barchart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Boxplot' width='192'>
      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
      bRGdZ900v9gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab' width='192'>
      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
      a3YWidPMGQ4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Histogram' width='384'>
      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
      ju8UB5zGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      zQ0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Scatterplot' width='384'>
      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
      UBRFSVD/H/nHAPct9xBbAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
