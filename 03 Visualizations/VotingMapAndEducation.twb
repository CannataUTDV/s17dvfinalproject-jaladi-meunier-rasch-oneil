<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CountyElections+ (Multiple Connections)' inline='true' name='federated.0l7c8yl1d11sns1bt8vnj1gtociv' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='acs-2015-5-e-race-whitepopulation' name='textscan.1jsxm1c1fvmlhw1be4tav0zudpfu'>
            <connection class='textscan' directory='C:/Users/Lymm/Downloads' filename='finalproject_ElectionsData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1jsxm1c1fvmlhw1be4tav0zudpfu' name='finalproject_ElectionsData.csv' table='[finalproject_ElectionsData#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='real' name='Total.Population' ordinal='1' />
            <column datatype='integer' name='votes' ordinal='2' />
            <column datatype='integer' name='votes16_trumpd' ordinal='3' />
            <column datatype='integer' name='votes16_clintonh' ordinal='4' />
            <column datatype='integer' name='votes16_johnsong' ordinal='5' />
            <column datatype='integer' name='votes16_steinj' ordinal='6' />
            <column datatype='real' name='rep16_frac' ordinal='7' />
            <column datatype='real' name='dem16_frac' ordinal='8' />
            <column datatype='real' name='At.Least.Bachelor.s.Degree' ordinal='9' />
            <column datatype='real' name='At.Least.High.School.Diploma' ordinal='10' />
            <column datatype='real' name='Less.Than.High.School' ordinal='11' />
            <column datatype='real' name='Graduate.Degree' ordinal='12' />
            <column datatype='real' name='White.not.Latino.Population' ordinal='13' />
            <column datatype='real' name='African.American.Population' ordinal='14' />
            <column datatype='real' name='Native.American.Population' ordinal='15' />
            <column datatype='real' name='Asian.American.Population' ordinal='16' />
            <column datatype='real' name='Population.some.other.race.or.races' ordinal='17' />
            <column datatype='real' name='Latino.Population' ordinal='18' />
            <column datatype='real' name='Management.professional.and.related.occupations' ordinal='19' />
            <column datatype='real' name='Service.occupations' ordinal='20' />
            <column datatype='real' name='Sales.and.office.occupations' ordinal='21' />
            <column datatype='real' name='Farming.fishing.and.forestry.occupations' ordinal='22' />
            <column datatype='real' name='Construction.extraction.maintenance.and.repair.occupations' ordinal='23' />
            <column datatype='real' name='Production.transportation.and.material.moving.occupations' ordinal='24' />
            <column datatype='real' name='Adult.obesity' ordinal='25' />
            <column datatype='real' name='Diabetes' ordinal='26' />
            <column datatype='real' name='Uninsured' ordinal='27' />
            <column datatype='real' name='Unemployment' ordinal='28' />
            <column datatype='real' name='Diabetes 1' ordinal='29' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Population]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Total.Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>votes</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes16_trumpd</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes16_trumpd]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>votes16_trumpd</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes16_clintonh</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes16_clintonh]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>votes16_clintonh</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes16_johnsong</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes16_johnsong]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>votes16_johnsong</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>votes16_steinj</remote-name>
            <remote-type>20</remote-type>
            <local-name>[votes16_steinj]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>votes16_steinj</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rep16_frac</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rep16_frac]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>rep16_frac</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dem16_frac</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dem16_frac]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>dem16_frac</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>At.Least.Bachelor.s.Degree</remote-name>
            <remote-type>5</remote-type>
            <local-name>[At.Least.Bachelor.s.Degree]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>At.Least.Bachelor.s.Degree</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>At.Least.High.School.Diploma</remote-name>
            <remote-type>5</remote-type>
            <local-name>[At.Least.High.School.Diploma]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>At.Least.High.School.Diploma</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Less.Than.High.School</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Less.Than.High.School]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Less.Than.High.School</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Graduate.Degree</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Graduate.Degree]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Graduate.Degree</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White.not.Latino.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[White.not.Latino.Population]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>White.not.Latino.Population</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>African.American.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[African.American.Population]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>African.American.Population</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Native.American.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Native.American.Population]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Native.American.Population</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asian.American.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Asian.American.Population]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Asian.American.Population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population.some.other.race.or.races</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population.some.other.race.or.races]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Population.some.other.race.or.races</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latino.Population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latino.Population]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Latino.Population</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Management.professional.and.related.occupations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Management.professional.and.related.occupations]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Management.professional.and.related.occupations</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service.occupations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Service.occupations]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Service.occupations</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales.and.office.occupations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales.and.office.occupations]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Sales.and.office.occupations</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Farming.fishing.and.forestry.occupations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Farming.fishing.and.forestry.occupations]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Farming.fishing.and.forestry.occupations</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Construction.extraction.maintenance.and.repair.occupations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Construction.extraction.maintenance.and.repair.occupations]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Construction.extraction.maintenance.and.repair.occupations</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Production.transportation.and.material.moving.occupations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Production.transportation.and.material.moving.occupations]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Production.transportation.and.material.moving.occupations</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Adult.obesity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Adult.obesity]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Adult.obesity</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Diabetes</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Uninsured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Uninsured]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Uninsured</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diabetes 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Diabetes 1]</local-name>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias>Diabetes 1</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[finalproject_ElectionsData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[AreaName (acs-2015-5-e-income-medians.csv)]' role='dimension' type='nominal' />
      <column caption='DemRep' datatype='real' name='[Calculation_573083053141032960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [dem16_frac] &gt; 0.5 THEN [dem16_frac]-0.5&#13;&#10;ELSEIF [rep16_frac] &gt; 0.5 THEN -[rep16_frac]+0.5&#13;&#10;ELSE 0&#13;&#10;END' />
      </column>
      <column caption='LessThanHighSchoolEducation' datatype='string' name='[Calculation_573083053142827009]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Less.Than.High.School] &gt; 20 THEN &quot;5&quot;&#13;&#10;ELSEIF [Less.Than.High.School] &gt; 16 THEN &quot;4&quot;&#13;&#10;ELSEIF [Less.Than.High.School] &gt; 12 THEN &quot;3&quot;&#13;&#10;ELSEIF [Less.Than.High.School] &gt; 8 THEN &quot;2&quot;&#13;&#10;ELSE &quot;1&quot;&#13;&#10;END' />
      </column>
      <column caption='GraduateDegree' datatype='string' name='[Calculation_573083053145473026]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Graduate.Degree] &gt; 13 THEN &quot;9&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 12 THEN &quot;8&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 11 THEN &quot;7&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 10 THEN &quot;6&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 9 THEN &quot;5&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 8 THEN &quot;4&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 7 THEN &quot;3&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 6 THEN &quot;2&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 5 THEN &quot;1&quot;&#13;&#10;ELSE &quot;0&quot;&#13;&#10;END' />
      </column>
      <column caption='Victory Margin' datatype='string' name='[Calculation_958633470227492866]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [v_1] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#10;ELSEIF [v_1] &gt; .625 THEN &quot;Trump Win&quot;&#10;ELSEIF [v_1] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#10;ELSEIF [v_1] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#10;ELSEIF [v_1] &gt; .25 THEN &quot;Hillary Win&quot;&#10;ELSE &quot;Hillary Landslide Win&quot;&#10;END' />
      </column>
      <column caption='Median Income' datatype='integer' name='[Median_Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Number Below PovertyLine' datatype='integer' name='[Number_Below_PovertyLine]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='White Population' datatype='integer' name='[White_Population]' role='measure' type='quantitative' />
      <column caption='Dem16 Frac' datatype='real' name='[dem16_frac]' role='measure' type='quantitative' />
      <column caption='Rep16 Frac' datatype='real' name='[rep16_frac]' role='measure' type='quantitative' />
      <column caption='State 1' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='rep16_frac 1' datatype='real' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Votes16 Clintonh' datatype='integer' name='[votes16_clintonh]' role='measure' type='quantitative' />
      <column caption='Votes16 Johnsong' datatype='integer' name='[votes16_johnsong]' role='measure' type='quantitative' />
      <column caption='Votes16 Steinj' datatype='integer' name='[votes16_steinj]' role='measure' type='quantitative' />
      <column caption='Votes16 Trumpd' datatype='integer' name='[votes16_trumpd]' role='measure' type='quantitative' />
      <column caption='Votes' datatype='integer' name='[votes]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_958633470227492866]' derivation='None' name='[none:Calculation_958633470227492866:nk]' pivot='key' type='nominal' />
      <group name='[Swing States]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[AreaName (acs-2015-5-e-income-medians.csv)]' member='&quot;Wisconsin&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='false' units='records'>
        <connection class='dataengine' dbname='C:/Users/Lymm/Desktop/git/s17dvfinalproject-jaladi-meunier-rasch-oneil/03 Visualizations/VotingMapAndEducation.twb Files/Users/varunjaladi/Documents/My Tableau Repository/Datasources/federated.0l7c8yl1d11sns1bt8vnj1gtociv_11kupus1xijb0m19hkrrn127mnbp.tde' schema='Extract' tablename='Extract' update-time='04/24/2017 09:16:44 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[AreaName (acs-2015-5-e-income-medians.csv)]' value='[Extract].[AreaName]' />
            <map key='[AreaName (acs-2015-5-e-poverty-numinpov.csv)]' value='[Extract].[AreaName1]' />
            <map key='[AreaName]' value='[Extract].[AreaName2]' />
            <map key='[Median_Income]' value='[Extract].[Median_Income]' />
            <map key='[Number_Below_PovertyLine]' value='[Extract].[Number_Below_PovertyLine]' />
            <map key='[White_Population]' value='[Extract].[White_Population]' />
            <map key='[v_0]' value='[Extract].[v_0]' />
            <map key='[v_1]' value='[Extract].[v_1]' />
            <map key='[v_2]' value='[Extract].[v_2]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='50' timestamp-start='2017-04-24 21:16:44.751' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>AreaName</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AreaName (acs-2015-5-e-income-medians.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AreaName</remote-alias>
              <ordinal>0</ordinal>
              <family>acs-2015-5-e-income-medians.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Montana&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AreaName1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AreaName (acs-2015-5-e-poverty-numinpov.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AreaName1</remote-alias>
              <ordinal>1</ordinal>
              <family>acs-2015-5-e-poverty-numinpov.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Montana&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AreaName2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[AreaName]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AreaName2</remote-alias>
              <ordinal>2</ordinal>
              <family>acs-2015-5-e-race-whitepopulation.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Median_Income</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Median_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Median_Income</remote-alias>
              <ordinal>3</ordinal>
              <family>acs-2015-5-e-income-medians.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3353430.0</statistic>
                <statistic aggregation='Avg' datatype='real'>67068.600000000006</statistic>
                <statistic aggregation='Min' datatype='integer'>49274</statistic>
                <statistic aggregation='Max' datatype='integer'>90089</statistic>
                <statistic aggregation='Stdev' datatype='real'>10504.875219999289</statistic>
                <statistic aggregation='StdevP' datatype='real'>10399.295905012032</statistic>
                <statistic aggregation='Var' datatype='real'>110352403.3877551</statistic>
                <statistic aggregation='VarP' datatype='real'>108145355.31999999</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>230317123064.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number_Below_PovertyLine</remote-name>
              <remote-type>3</remote-type>
              <local-name>[Number_Below_PovertyLine]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number_Below_PovertyLine</remote-alias>
              <ordinal>4</ordinal>
              <family>acs-2015-5-e-poverty-numinpov.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>47676086.0</statistic>
                <statistic aggregation='Avg' datatype='real'>953521.71999999997</statistic>
                <statistic aggregation='Min' datatype='integer'>64995</statistic>
                <statistic aggregation='Max' datatype='integer'>6135142</statistic>
                <statistic aggregation='Stdev' datatype='real'>1143254.7592158073</statistic>
                <statistic aggregation='StdevP' datatype='real'>1131764.4700114073</statistic>
                <statistic aggregation='Var' datatype='real'>1307031444469.5935</statistic>
                <statistic aggregation='VarP' datatype='real'>1280890815580.2017</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>109504724304598.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>White_Population</remote-name>
              <remote-type>3</remote-type>
              <local-name>[White_Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>White_Population</remote-alias>
              <ordinal>5</ordinal>
              <family>acs-2015-5-e-race-whitepopulation.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>232458805.0</statistic>
                <statistic aggregation='Avg' datatype='real'>4649176.0999999996</statistic>
                <statistic aggregation='Min' datatype='integer'>260325</statistic>
                <statistic aggregation='Max' datatype='integer'>23747013</statistic>
                <statistic aggregation='Stdev' datatype='real'>4797190.821164621</statistic>
                <statistic aggregation='StdevP' datatype='real'>4748976.6244079126</statistic>
                <statistic aggregation='Var' datatype='real'>23013039774666.094</statistic>
                <statistic aggregation='VarP' datatype='real'>22552778979172.77</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2208380869399199.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>6</ordinal>
              <family>electiondatabystate</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>7</ordinal>
              <family>electiondatabystate</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>30.518853360907219</statistic>
                <statistic aggregation='Avg' datatype='real'>0.61037706721814433</statistic>
                <statistic aggregation='Min' datatype='real'>0.042509272000000001</statistic>
                <statistic aggregation='Max' datatype='real'>0.81079162281720452</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.1479153668291022</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.14642874249717544</statistic>
                <statistic aggregation='Var' datatype='real'>0.02187895574418787</statistic>
                <statistic aggregation='VarP' datatype='real'>0.021441376629304114</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>19.700077040756362</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>8</ordinal>
              <family>electiondatabystate</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>19.481146639092788</statistic>
                <statistic aggregation='Avg' datatype='real'>0.38962293278185578</statistic>
                <statistic aggregation='Min' datatype='real'>0.18920837718279571</statistic>
                <statistic aggregation='Max' datatype='real'>0.95749072800000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.14791536682910206</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.1464287424971753</statistic>
                <statistic aggregation='Var' datatype='real'>0.021878955744187824</statistic>
                <statistic aggregation='VarP' datatype='real'>0.021441376629304069</statistic>
                <statistic aggregation='Count' datatype='integer'>50</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8.6623703189419281</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.260745' group-percentage='0.0401146' measure-ordering='alphabetic' measure-percentage='0.69914' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_958633470227492866:nk]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#4e9f50'>
              <bucket>&quot;Hillary Landslide Win&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;Hillary Narrow Win&quot;</bucket>
            </map>
            <map to='#c3ce3d'>
              <bucket>&quot;Hillary Win&quot;</bucket>
            </map>
            <map to='#ef8a0c'>
              <bucket>&quot;Trump Win&quot;</bucket>
            </map>
            <map to='#f7d42a'>
              <bucket>&quot;Trump Narrow Win&quot;</bucket>
            </map>
            <map to='#fcc66d'>
              <bucket>&quot;Trump Landslide Win&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Barchart1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Republican and Democrat Voting Fraction by State and Education</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CountyElections+ (Multiple Connections)' name='federated.0l7c8yl1d11sns1bt8vnj1gtociv' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0l7c8yl1d11sns1bt8vnj1gtociv'>
            <column caption='DemRep' datatype='real' name='[Calculation_573083053141032960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [dem16_frac] &gt; 0.5 THEN [dem16_frac]-0.5&#13;&#10;ELSEIF [rep16_frac] &gt; 0.5 THEN -[rep16_frac]+0.5&#13;&#10;ELSE 0&#13;&#10;END' />
            </column>
            <column caption='GraduateDegree' datatype='string' name='[Calculation_573083053145473026]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Graduate.Degree] &gt; 13 THEN &quot;9&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 12 THEN &quot;8&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 11 THEN &quot;7&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 10 THEN &quot;6&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 9 THEN &quot;5&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 8 THEN &quot;4&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 7 THEN &quot;3&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 6 THEN &quot;2&quot;&#13;&#10;ELSEIF [Graduate.Degree] &gt; 5 THEN &quot;1&quot;&#13;&#10;ELSE &quot;0&quot;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Graduate.Degree]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Dem16 Frac' datatype='real' name='[dem16_frac]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_573083053145473026]' derivation='None' name='[none:Calculation_573083053145473026:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Rep16 Frac' datatype='real' name='[rep16_frac]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_573083053141032960]' derivation='Sum' name='[sum:Calculation_573083053141032960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Graduate.Degree]' derivation='Sum' name='[sum:Graduate.Degree:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[Longitude (generated)]' field-type='quantitative' max='-7030700.5306402165' min='-19068708.18864245' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[Latitude (generated)]' field-type='quantitative' max='8154905.191350311' min='1094432.787550461' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Calculation_573083053141032960:qk]' max='0.5' min='-0.5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Calculation_573083053141032960:qk]' />
              <lod column='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:State:nk]' />
              <lod column='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Graduate.Degree:qk]' />
              <geometry column='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[Latitude (generated)]</rows>
        <cols>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:Calculation_573083053145473026:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Barchart2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>White Population By State and Victory Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Barchart3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Population Below Poverty Line By State and Victory Margin</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CountyElections+ (Multiple Connections)' name='federated.0l7c8yl1d11sns1bt8vnj1gtociv' />
          </datasources>
          <datasource-dependencies datasource='federated.0l7c8yl1d11sns1bt8vnj1gtociv'>
            <column caption='Victory Margin' datatype='string' name='[Calculation_958633470227492866]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_1] &gt; .75 THEN &quot;Trump Landslide Win&quot;&#10;ELSEIF [v_1] &gt; .625 THEN &quot;Trump Win&quot;&#10;ELSEIF [v_1] &gt; .5 THEN &quot;Trump Narrow Win&quot;&#10;ELSEIF [v_1] &gt; .375 THEN &quot;Hillary Narrow Win&quot;&#10;ELSEIF [v_1] &gt; .25 THEN &quot;Hillary Win&quot;&#10;ELSE &quot;Hillary Landslide Win&quot;&#10;END' />
            </column>
            <column caption='Number Below PovertyLine' datatype='integer' name='[Number_Below_PovertyLine]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_958633470227492866]' derivation='None' name='[none:Calculation_958633470227492866:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0]' derivation='None' name='[none:v_0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number_Below_PovertyLine]' derivation='Sum' name='[sum:Number_Below_PovertyLine:qk]' pivot='key' type='quantitative' />
            <column caption='State 1' datatype='string' name='[v_0]' role='dimension' type='nominal' />
            <column caption='rep16_frac 1' datatype='real' name='[v_1]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:Calculation_958633470227492866:nk]' />
              <text column='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Number_Below_PovertyLine:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:v_0:nk]</rows>
        <cols>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Number_Below_PovertyLine:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Barchart1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Calculation_573083053141032960:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;0&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[:Measure Names]</field>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:Calculation_573083053142827009:nk]</field>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:Calculation_573083053145473026:nk]</field>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:Diabetes:qk]</field>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:State:nk]</field>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:Graduate.Degree:qk]</field>
            <field>[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[sum:rep16_frac:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Barchart2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Barchart3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0l7c8yl1d11sns1bt8vnj1gtociv].[none:Calculation_958633470227492866:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Barchart1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Barchart2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Barchart3' width='384'>
      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
      jMxFyv8HkpJTQECJ2DEAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
